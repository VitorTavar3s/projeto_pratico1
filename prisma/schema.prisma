// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String 
  role String @default("user")
  StripeCustomerId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subscriptions Subscription[]
  invoices      Invoice[]
}

model Plan {
  id            String    @id @default(uuid())
  name          String
  description   String
  price         Float
  currency      String    @default("EUR")
  stripePriceId String?
  billingCycle  String    @default("monthly")
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  subscriptions Subscription[]
}

model Subscription {
  id          String   @id @default(uuid())
  userId      String
  planId      String
  stripeSubscriptionId String?
  isActive    Boolean  @default(true)
  startDate   DateTime @default(now())
  endDate     DateTime?
  user        User     @relation(fields: [userId], references: [id])
  plan        Plan     @relation(fields: [planId], references: [id])
  invoices    Invoice[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, planId])
}

model Invoice {
  id          String   @id @default(uuid())
  userId      String
  subscriptionId String
  amount      Float
  currency    String   @default("EUR")
  stripeInvoiceId String
  status      String   @default("pending") // paid, failed, etc
  dueDate     DateTime
  paidAt      DateTime?
  user        User     @relation(fields: [userId], references: [id])
  subscription Subscription @relation(fields: [subscriptionId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
